version: '3'
services:

    #PHP Service
    php:
        build:
            context: ./
            dockerfile: docker/php/${PHP_VERSION}.Dockerfile
        depends_on:
            - mysql
        container_name: ${PHP}
        working_dir: ${WORKING_DIR}
        environment:
            APP_ENV: local
            XDEBUG_CONFIG: remote_host=host.docker.internal remote_port=9003 # for xdebug
            PHP_IDE_CONFIG: serverName=docker # for xdebug servername
        volumes:
            - ./src/:${WORKING_DIR}/src
            - ./docker/php/conf.d/local.ini:/usr/local/etc/php/conf.d/local.ini
            - ./docker/php/conf.d/error_reporting.ini:/usr/local/etc/php/conf.d/error_reporting.ini
            - ./docker/php/conf.d/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini # comment out this will disable xdebug
            - ./docker/supervisord/supervisord.conf:/etc/supervisor/supervisord.conf # mapping supervisord.conf
        networks:
            - app-network

    #Nginx Service
    webserver:
        # platform: linux/amd64
        image: nginx
        container_name: ${WEBSERVER}
        working_dir: ${WORKING_DIR}
        depends_on:
            - php
        ports:
            - ${HTTP_PORT}:80
            - ${HTTPS_PORT}:443
        environment:
            - NGINX_HOST=jb.com
            - NGINX_PORT=80
        volumes:
            - ./:${WORKING_DIR}
            - ./docker/nginx/logs:/var/log/nginx
            - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
            - ./docker/nginx/certs:/root/ssl/certs
        networks:
            - app-network

    #Database
    mysql:
        image: mariadb:10.2
        container_name: ${MYSQL} 
        command: [ '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci','--default-authentication-plugin=mysql_native_password' ]
        environment:
            DB_CONNECTION: "${DB_CONNECTION}"
            MYSQL_DATABASE: "${MYSQL_DATABASE}"
            MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
            MYSQL_USER: "${MYSQL_USER}"
            MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
        ports:
            - "${DB_PORT}:${DB_PORT}"
        volumes:
            - ./docker/db/dbdata:/var/lib/mysql
            - ./docker/db/my.cnf:/etc/mysql/conf.d/my.cnf
        networks:
            - app-network

    composer:
        image: 'composer:${COMPOSER_VERSION}'

    elasticsearch:
        image: elasticsearch:${ES_VERSION}
        container_name: ${ELASTIC_SEARCH}
        environment:
            - "discovery.type=single-node"
            - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
        ports:
            - "9200:9200"
            - "9300:9300"
        networks:
            - app-network
    
    #Redis
    redis:
        image: redis:latest
        container_name: ${REDIS}
        restart: always
        ports:
            - "6379:6379"
        volumes:
            - ./redis:/data
        networks:
            - app-network

#Docker Networks
networks:
    app-network:
        driver: bridge

volumes:
    dbdata:
        driver: local
